stages:
  - test
  - deploy
  - release

default:
  image: kubos/kubos-dev:latest
  tags:
    - kubos
    - docker

.default_rules: &default_rules
  rules:
    - if: '$CI_COMMIT_BRANCH != "master"'
    - if: ! '$CI_MERGE_REQUEST_ID'

rust_check_x86:
  <<: *default_rules
  script: cargo check --workspace --all-targets

rust_check_mbm2:
  <<: *default_rules
  script: cargo check --workspace --all-targets --target arm-unknown-linux-gnueabihf
  variables:
    CC: /usr/bin/bbb_toolchain/usr/bin/arm-linux-gcc
    CXX: /usr/bin/bbb_toolchain/usr/bin/arm-linux-g++
    PKG_CONFIG_ALLOW_CROSS: 1

rust_check_iobc:
  <<: *default_rules
  script: cargo check --workspace --all-targets --target armv5te-unknown-linux-gnueabi
  variables:
    CC: /usr/bin/iobc_toolchain/usr/bin/arm-linux-gcc
    CXX: /usr/bin/iobc_toolchain/usr/bin/arm-linux-g++
    PKG_CONFIG_ALLOW_CROSS: 1

rust_test:
  <<: *default_rules
  script:
    - cd apis/app-api/python && pip3 install .
    - cargo test --workspace --release
    - cargo test --package kubos-app-service --test test_python_app --release -- --ignored

rust_test_large_upload:
  <<: *default_rules
  script: cargo run --bin large_upload --release


rust_test_large_download:
  <<: *default_rules
  script: cargo run --bin large_download --release

rust_test_nosengine:
  <<: *default_rules
  script:
    - cd apis/nosengine-rust && cargo check; cd -
    - cd test/integration/nosengine-rust && cargo run

rust_fmt:
  <<: *default_rules
  script: cargo fmt --all -- --check

rust_clippy:
  <<: *default_rules
  script: cargo clippy --workspace --all-targets

non_rust_tests:
  <<: *default_rules
  script:
    -  python3 tools/ci_c.py
    -  python3 hal/python-hal/i2c/test_i2c.py
    -  cd hal/python-hal/i2c; python3 setup.py install; cd -
    -  cd apis/app-api/python; python3 test_app_api.py

tag:
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )' # install ssh
    - eval $(ssh-agent -s)  # run ssh-agent in docker
    - echo "$KUBOS_BUILDER_PRIVATE_KEY" | tr -d '\r' | ssh-add -  # add the private key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rm -rf $CI_PROJECT_DIR
    - mkdir -p $CI_PROJECT_DIR
    - git clone git@gitlab.com:pumpkin-space-systems/public/kubos.git $CI_PROJECT_DIR
    - cd $CI_PROJECT_DIR

  variables:
    GIT_STRATEGY: none
    GIT_AUTHOR_NAME: $GITLAB_USER_NAME
    GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
    GIT_COMMITTER_NAME: $GITLAB_USER_NAME
    GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  stage: deploy
  script: ./deploy_tag.sh
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

build_release:
  stage: release
  variables:
    KUBOS_TAG: '$CI_COMMIT_TAG'
  trigger: public/kubos-linux-build
  only:
    - tags
